[DEFAULT]
log_config_append = /etc/triliovault-wlm/wlm_logging.conf


{% if triliovault_enable_tls_backend | bool %}
my_ip = 127.0.0.1
{% else %}
my_ip = {{ api_interface_address }}
{% endif %}

{% if triliovault_enable_tls_backend | bool %}
osapi_workloads_listen = 127.0.0.1
{% else %}
osapi_workloads_listen = {{ api_interface_address }}
{% endif %}

{% if triliovault_enable_tls_backend | bool %}
triliovault_hostnames = 127.0.0.1
{% else %}
triliovault_hostnames = {{ api_interface_address }}
{% endif %}

config_status = configured

state_path = /opt/stack/data/triliovault-wlm
rootwrap_config = /etc/triliovault-wlm/rootwrap.conf

wlm_rootwrap = /usr/bin/workloadmgr-rootwrap
api_paste_config = /etc/triliovault-wlm/api-paste.ini

sql_connection = mysql+pymysql://{{ triliovault_db_details[1].database_user }}:{{ triliovault_wlm_database_password }}@{{ triliovault_db_details[1].database_address  }}/{{  triliovault_db_details[1].database_user }}

osapi_workloads_listen_port = {{ triliovault_wlm_api_listen_port }}

##OS Details
cloud_admin_user_id = {{ Cloud_Admin_UserID }}
cloud_admin_project_id = {{ cloud_admin_projectid }}

cloud_admin_domain = {{ cloud_admin_domainid }}
cloud_admin_role = {{ cloud_admin_role }}

trustee_role = {{ trustee_role }}
domain_name = {{ cloud_admin_domainid }}

triliovault_user_domain_id = default 
cloud_unique_id = {{ Triliovault_Wlm_User_ID }} 

region_name_for_services = {{ openstack_region_name }}
global_job_scheduler_override = False

transport_url = {{ rpc_transport_url }}

api_workers = 4
workloads_workers = 4


glance_production_api_servers = {{ glance_internal_endpoint }}
glance_api_version = 2

## Keystone URL for internal authentication
keystone_endpoint_url = {{ keystone_internal_url }}
keystone_auth_version = 3

cinder_production_endpoint_template = "{{ internal_protocol }}://{{ cinder_internal_fqdn | put_address_in_context('url') }}:{{ cinder_api_port }}/v3/%(tenant_id)s"

nova_admin_auth_url = {{ keystone_internal_url }}
nova_production_endpoint_template = "{{ internal_protocol }}://{{ nova_internal_fqdn | put_address_in_context('url') }}:{{ nova_api_port }}/v2.1"

neutron_admin_auth_url = {{ keystone_internal_url }}
neutron_production_url = {{ neutron_internal_endpoint }}



# The path to store the taskflow data
taskflow_path = /var/lib/workloadmgr/taskflow
taskflow_max_cache_size = 1024

rabbit_virtual_host = {{ triliovault_wlm_rpc_vhost }}
compute_driver = libvirt.LibvirtDriver
vault_storage_das_device = none

{% if triliovault_backup_target == "nfs" %}

vault_storage_type = nfs

{% if multi_ip_nfs_enabled == "yes" %}
vault_storage_nfs_export = "{{ triliovault_nfs_map[inventory_hostname] }}"
{% else %}
vault_storage_nfs_export = {{ triliovault_nfs_shares }}
{% endif %}

vault_storage_nfs_options = {{ triliovault_nfs_options }}

{% elif triliovault_backup_target == "amazon_s3" %}

vault_storage_type = s3
vault_storage_nfs_export = TrilioVault
vault_s3_auth_version = DEFAULT
vault_s3_access_key_id = {{ triliovault_s3_access_key }}
vault_s3_secret_access_key = {{ triliovault_s3_secret_key }}
vault_s3_region_name = {{ triliovault_s3_region_name }}
vault_s3_bucket = {{ triliovault_s3_bucket_name }}
vault_s3_signature_version = {{ triliovault_s3_version }}
{# vault_s3_auth_version = {{ triliovault_s3_auth_version }} #}

{% elif triliovault_backup_target == "other_s3_compatible" %}

vault_storage_type = s3
vault_storage_nfs_export = TrilioVault
vault_s3_auth_version = DEFAULT
vault_s3_access_key_id = {{ triliovault_s3_access_key }}
vault_s3_secret_access_key = {{ triliovault_s3_secret_key }}
vault_s3_region_name = {{ triliovault_s3_region_name }}
vault_s3_bucket = {{ triliovault_s3_bucket_name }}
vault_s3_endpoint_url = {{ triliovault_s3_endpoint_url }}
vault_s3_signature_version = {{ triliovault_s3_version }}
{# vault_s3_auth_version = {{ triliovault_s3_auth_version }} #}
vault_s3_ssl = {{ triliovault_s3_ssl_enabled }}
vault_s3_ssl_cert = /etc/triliovault-wlm/{{ triliovault_s3_ssl_cert_file_name }}

{% endif %}

vault_enable_threadpool = True
vault_s3_support_empty_dir = False

vault_data_directory_old = /var/triliovault
vault_data_directory = /var/trilio/triliovault-mounts

max_wait_for_upload = 48
neutron_api_insecure = False

[global_job_scheduler]
misfire_grace_time = 600

[s3fuse_sys_admin]
helper_command = sudo /usr/bin/workloadmgr-rootwrap /etc/triliovault-wlm/rootwrap.conf privsep-helper

[keystone_authtoken]
admin_tenant_name = service
project_name = service

signing_dir = /var/cache/workloadmgr
auth_url = {{ keystone_internal_url }}

www_authenticate_uri = {{ keystone_internal_url }}/v3
auth_type = password

username = {{ triliovault_wlm_keystone_user }}
password = {{ triliovault_wlm_keystone_password }}

admin_user = {{ triliovault_wlm_keystone_user }} 
admin_password = {{ triliovault_wlm_keystone_password }}

project_domain_id = default
user_domain_id = default

auth_plugin = password

cafile = {{ openstack_cacert }} 

insecure = False
service_token_roles_required = True

[clients]
client_retry_limit = 3
endpoint_type = internal

cafile = {{ openstack_cacert }} 

insecure = False

[alembic]
script_location = /usr/share/workloadmgr/migrate_repo
version_locations = /usr/share/workloadmgr/migrate_repo/versions

sqlalchemy.url= mysql+pymysql://{{ triliovault_db_details[1].database_user }}:{{ triliovault_wlm_database_password }}@{{ triliovault_db_details[1].database_address }}/{{ triliovault_db_details[1].database_name }}


[filesearch]
process_timeout = 300

[barbican]
encryption_support = True

[oslo_messaging_rabbit]
heartbeat_in_pthread = False
{% if om_enable_rabbitmq_tls | bool %}
ssl = true
ssl_ca_file = {{ om_rabbitmq_cacert }}
{% endif %}
{% if om_enable_rabbitmq_high_availability | bool %}
amqp_durable_queues = true
{% endif %}
{% if om_enable_rabbitmq_quorum_queues | bool %}
rabbit_quorum_queue = true
{% endif %}
